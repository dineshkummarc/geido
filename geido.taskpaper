Geido:
Geido is the aesthetic of process. 
Geido will be a modular and minimal CMS that first starts with taggable content, much like a blog. 
Each Tag will have it's own view, and the ability to customize each Tag view adhoc. 
Geido will be extensible with a library of plugins for third party content that can be loaded as needed. First up is Vimeo, and eventually others, like Delicious for links, Twitter for meta content,  Discus for comments, and possibly the concept of multiple authors.
Geido is themeable, and it should be fairly easy to convert your current haml or erb views to geido.

Tasks:
- make admin links cache friendly (jquery insertion?) @dev
- make all views cache friendly, admin links, flash messages @dev
- ability to set which tags induce a plugin. ie: if user tags: screencast, use video plugin.
- clean up routes, should posts be available at /tag/postid AND /posts/postid, or only /tag/postid ??
- extend plugin properties with (optional) label, fieldtype, (optional error flash message), (optional required fields) ??
- move config from main.rb to external config.yaml file, and define site specific info: password, site name, theme, etc. @dev
- move plugins to separate repositories, treat as git submodules. ? @dev
- archive view, allowing users to browse by date. (side scrolling timeline, by month, oldest to newest)
- tag view, allowing users to browse by tag. (side scrolling, alphabetical)
- pagination, display X latest entries, as defined in config.yaml on list and/or index.haml. [possibly use jquery inline pagination (and google reader like) for overflow.]

Launch:
- register geidoapp.com, set up geido there. or just use geido.heroku.com
- geidoapp.com splash page; a combination of: http://www.sweetcron.com/ and http://wordpress.org/
- create running geido on heroku post
- readme / getting started post
- intro screencast with pedro
- api documentation as plugin!

Plugins:
- create disqus comment plugin. (if "comment" plugin is present, shows comment count in post partials, and lists comments in show view" @dev
- create s3 plugin for uploading assets @dev
- add flickr support to video plugin
- create delicious plugin for links and ryans blog.
- create photo plugin, flickr, picasa, littlesnapper (ember) etc.

Backlog:
- should we just use http auth? would that make an easier path to multiple authors?
- allow for different author names, multiple users - could this be a plugin?
- consider Vimeo gem for video plug. if vimeo url is present, gem fills body and title with information from vimeo site. @dev
- clean up style EVERYWHERE, possibly use micro theme @design
- concept of migrations for properties field ??
- partialize helpers keeping style away from methods.??  @dev
- ability to use either haml OR erb as themes. possible?
- concept of media (photos, videos, etc, being embedded into a post with special media[:photo(1)] tag, or something a little prettier)
